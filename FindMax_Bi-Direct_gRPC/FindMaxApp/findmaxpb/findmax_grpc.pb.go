// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: findmaxpb/findmax.proto

package findmaxpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FindMaxServiceClient is the client API for FindMaxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FindMaxServiceClient interface {
	GetMaxNum(ctx context.Context, opts ...grpc.CallOption) (FindMaxService_GetMaxNumClient, error)
}

type findMaxServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFindMaxServiceClient(cc grpc.ClientConnInterface) FindMaxServiceClient {
	return &findMaxServiceClient{cc}
}

func (c *findMaxServiceClient) GetMaxNum(ctx context.Context, opts ...grpc.CallOption) (FindMaxService_GetMaxNumClient, error) {
	stream, err := c.cc.NewStream(ctx, &FindMaxService_ServiceDesc.Streams[0], "/findmax.FindMaxService/GetMaxNum", opts...)
	if err != nil {
		return nil, err
	}
	x := &findMaxServiceGetMaxNumClient{stream}
	return x, nil
}

type FindMaxService_GetMaxNumClient interface {
	Send(*FindMaxRequest) error
	Recv() (*FindMaxResponse, error)
	grpc.ClientStream
}

type findMaxServiceGetMaxNumClient struct {
	grpc.ClientStream
}

func (x *findMaxServiceGetMaxNumClient) Send(m *FindMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findMaxServiceGetMaxNumClient) Recv() (*FindMaxResponse, error) {
	m := new(FindMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindMaxServiceServer is the server API for FindMaxService service.
// All implementations must embed UnimplementedFindMaxServiceServer
// for forward compatibility
type FindMaxServiceServer interface {
	GetMaxNum(FindMaxService_GetMaxNumServer) error
	mustEmbedUnimplementedFindMaxServiceServer()
}

// UnimplementedFindMaxServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFindMaxServiceServer struct {
}

func (UnimplementedFindMaxServiceServer) GetMaxNum(FindMaxService_GetMaxNumServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMaxNum not implemented")
}
func (UnimplementedFindMaxServiceServer) mustEmbedUnimplementedFindMaxServiceServer() {}

// UnsafeFindMaxServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FindMaxServiceServer will
// result in compilation errors.
type UnsafeFindMaxServiceServer interface {
	mustEmbedUnimplementedFindMaxServiceServer()
}

func RegisterFindMaxServiceServer(s grpc.ServiceRegistrar, srv FindMaxServiceServer) {
	s.RegisterService(&FindMaxService_ServiceDesc, srv)
}

func _FindMaxService_GetMaxNum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindMaxServiceServer).GetMaxNum(&findMaxServiceGetMaxNumServer{stream})
}

type FindMaxService_GetMaxNumServer interface {
	Send(*FindMaxResponse) error
	Recv() (*FindMaxRequest, error)
	grpc.ServerStream
}

type findMaxServiceGetMaxNumServer struct {
	grpc.ServerStream
}

func (x *findMaxServiceGetMaxNumServer) Send(m *FindMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findMaxServiceGetMaxNumServer) Recv() (*FindMaxRequest, error) {
	m := new(FindMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindMaxService_ServiceDesc is the grpc.ServiceDesc for FindMaxService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FindMaxService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "findmax.FindMaxService",
	HandlerType: (*FindMaxServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMaxNum",
			Handler:       _FindMaxService_GetMaxNum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "findmaxpb/findmax.proto",
}
